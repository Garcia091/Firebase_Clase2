{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","firebase/firebase-config.js","actions/uiError.js .js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notesAction.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/task/Task.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","uid","name","loadding","msjError","notes","active","reducers","combineReducers","auth","state","action","type","payload","displayName","ui","loading","console","log","id","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","startLoading","finishLoading","loadNotes","a","collection","get","noteStore","forEach","hijo","push","data","fileUpload","file","fromData","FormData","append","fetch","method","body","resp","ok","json","cluodRes","secure_url","activeNote","addNewNote","startLoadingNote","dispatch","setNote","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","login","logout","useForm","useState","values","setValues","reset","newStateForm","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","email","password","formValues","className","onSubmit","e","preventDefault","signInWithEmailAndPassword","then","user","catch","startLoginEmailPassword","placeholder","autoComplete","onChange","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","formValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","note","key","Sidebar","signOut","getSate","newNote","Date","getTime","add","docRef","NotesAppBar","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","delete","position","icon","showConfirmButton","timer","NoteScreen","activeId","useRef","useEffect","current","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","Task","autofocus","rows","AppRouter","checking","setChecking","isLoogedIn","setsIsLoogedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ce6cdc74.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth Logout]',\r\n\r\n    uiSetError: '[UI] set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New notes',\r\n    notesActive: '[Notes] Set note active',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Update notes',\r\n    notesDelete: '[Notes] New notes',\r\n    notesFileUrl: '[Notes] image url',\r\n    notesLogoutClean: '[Notes] Logout ',\r\n\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n const initialState = {\r\n    uid:'',\r\n    name: '',\r\n \r\n} \r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return { }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    loadding: false,\r\n    msjError: null\r\n}\r\n\r\nexport const registro = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msjError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msjError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case types.logout:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesLoad:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            console.log(action.payload.id)\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    notes => notes.id === action.payload.id\r\n                        ? action.payload.notes\r\n                        : notes\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(notes => notes.id !== action.payload)\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n            case types.notesLogoutClean:\r\n                return {\r\n                    ...state,\r\n                    active: null,\r\n                    notes:[]\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { registro } from '../reducers/uiReducer';\r\nimport {notesReducer} from '../reducers/notesReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: registro,\r\n    notes: notesReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n        )\r\n);","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCjEJEW1Ml0UmhpW0HZP5TSs96AsgGkreo\",\r\n    authDomain: \"app-frontend-6.firebaseapp.com\",\r\n    projectId: \"app-frontend-6\",\r\n    storageBucket: \"app-frontend-6.appspot.com\",\r\n    messagingSenderId: \"66843513700\",\r\n    appId: \"1:66843513700:web:ac800485c5370d3e30a071\"\r\n  };\r\n  \r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","import {types} from '../types/types'\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n","import { db } from '../firebase/firebase-config'\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const noteStore = await db.collection(`${uid}/journal/note`).get()\r\n    const notes = [];\r\n\r\n    noteStore.forEach(hijo=>{\r\n       notes.push({\r\n        id:hijo.id,\r\n        ...hijo.data()\r\n       })\r\n    })\r\n   \r\n    console.log(notes)\r\n    return notes\r\n}\r\n\r\n","export const fileUpload = async(file) => {\r\n\r\n    const cluodUrl = 'https://api.cloudinary.com/v1_1/db9wh5uvt/image/upload'\r\n    const fromData = new FormData();\r\n    fromData.append('upload_preset', 'react-app');\r\n    fromData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cluodUrl, {\r\n            method:'POST',\r\n            body: fromData\r\n        });\r\n\r\n        if(resp.ok){\r\n              const cluodRes = await resp.json()\r\n              console.log('data',cluodRes)\r\n              return cluodRes.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n       throw error;\r\n    }\r\n \r\n}","import { db } from '../firebase/firebase-config'\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\nexport const notesAction = (notes) => {\r\n    return async (dispatch, getSate) => {\r\n\r\n        const uid = getSate().auth.uid\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const docRef = await db.collection(`${uid}/journal/note`).add(newNote)\r\n        console.log()\r\n       \r\n        dispatch(activeNote(docRef.id, newNote))\r\n        dispatch(addNewNote(docRef.id, newNote))\r\n      \r\n    }\r\n}\r\n\r\nexport const activeNote = (id, notes) => {\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...notes\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewNote = ( id, notes ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...notes\r\n    }\r\n})\r\n\r\nexport const startLoadingNote = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNote(notes))\r\n    }\r\n}\r\n\r\nexport const setNote = (notes) => {\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (notes) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!notes.url) {\r\n            delete notes.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...notes }\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${uid}/journal/note/${notes.id}`).update(noteToFirestore)\r\n        dispatch(refreshNote(notes.id, noteToFirestore));\r\n      \r\n        Swal.fire('Saved', notes.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, notes) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        notes: {\r\n            id,\r\n            ...notes\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait ...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/note/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Delete',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutClean,\r\n\r\n});\r\n","import { types } from '../types/types';\r\nimport { googleAuthProvider, firebase } from '../firebase/firebase-config'\r\nimport { startLoading, finishLoading } from './uiError.js '\r\nimport { noteLogout } from './notesAction';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading)\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n               \r\n                dispatch(login(user.uid, user.displayName,))\r\n                dispatch(finishLoading)\r\n            })\r\n            .catch(e => {\r\n                \r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newStateForm = initialState ) => {\r\n        setValues( newStateForm );\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.ui);\r\n    console.log(loading)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'garcia123@gmail.com',\r\n        password: '1234567'\r\n    })\r\n\r\n    //desestructuramos\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    //disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setError, removeError } from '../../actions/uiError.js '\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msjError } = useSelector(state => state.ui);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = values\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('nombre requerido'))\r\n            console.log('nombre requerido')\r\n            return false\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email requerido'))\r\n            console.log('Email requerido')\r\n            return false\r\n        } else if (password !== password2) {\r\n            console.log('La contraseña es incorrecta')\r\n            dispatch(setError('La contraseña es incorrecta'))\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true\r\n\r\n\r\n    }\r\n\r\n    const HandleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={HandleRegister}>\r\n\r\n                {\r\n                    msjError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msjError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notesAction';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClic = () => {\r\n        dispatch(\r\n            activeNote(id,\r\n                {\r\n                    date, title, body, url\r\n                }\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer\" onClick={handleEntryClic}>\r\n\r\n            <div\r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry key={note.id}\r\n                        {...note} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport {notesAction} from '../../actions/notesAction'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    const handleLogout = () => {\r\n        console.log('Click')\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleNew = () => {\r\n        dispatch(notesAction(notes))\r\n        console.log('Click', notes)\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <img src=\"\" alt=\"\" />\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\"\r\n                    onClick={handleLogout}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick ={handleNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\" >\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { startSaveNote, startUploading, startDeleting } from '../../actions/notesAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n        \r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        console.log('url cargado', file)\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(active.id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n                <button type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={handleDelete}\r\n                >\r\n                    Eliminar\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote } from '../../actions/notesAction'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active: notes } = useSelector(state => state.notes);\r\n    const dispatch = useDispatch();\r\n\r\n    const [values, handleInputChange, reset] = useForm(notes);\r\n    const { body, title } = values;\r\n\r\n    const activeId = useRef(notes.id)\r\n\r\n    useEffect(() => {\r\n        if (notes.id !== activeId.current) {\r\n            reset(notes)\r\n        }\r\n        activeId.current = notes.id\r\n    }, [notes, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(values.id, { ...values }))\r\n    }, [values, dispatch])\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (notes.url)\r\n                    &&\r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={notes.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ?  <NoteScreen />\r\n                    :<NothingSelected/>\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const Task = () => {\r\n    return (\r\n        <div className=\" text-center\">\r\n            <div className=\"container p-4\">\r\n                <div className=\"  row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body \">\r\n\r\n                                <h1 className=\"h4\">Add Task</h1>\r\n\r\n                                <form id=\"task-form\">\r\n                                    <div className=\"form-group py-3\">\r\n                                        <input type=\"text\" id=\"task-title\" className=\"form-control\"  placeholder=\"Task Title\"\r\n                                            autofocus />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea id=\"task-description\" rows=\"3\" className=\"form-control\" placeholder=\"Task Description\"></textarea>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary\" id=\"btn-task-form\" >\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\" id=\"tasks-container\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\n\r\nimport { login } from '../actions/auth'\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\nimport { startLoadingNote } from '../actions/notesAction';\r\nimport { Task } from '../components/task/Task';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoogedIn, setsIsLoogedIn] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            console.log(user)\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setsIsLoogedIn(true)\r\n                dispatch(startLoadingNote(user.uid))\r\n            } else {\r\n                setsIsLoogedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Cargando ...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoogedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLoogedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/task\"\r\n                        component={Task}\r\n                        isAuthenticated={isLoogedIn}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}