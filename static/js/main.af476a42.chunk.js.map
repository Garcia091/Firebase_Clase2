{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","firebase/firebase-config.js","actions/uiError.js .js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","helpers/loadNotes.js","actions/notesAction.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","uid","name","loadding","msjError","notes","active","reducers","combineReducers","auth","state","action","type","payload","displayName","ui","loading","console","log","id","map","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","startLoading","finishLoading","login","logout","useForm","useState","values","setValues","reset","newStateForm","handleInputChange","target","value","LoginScreen","dispatch","useDispatch","useSelector","email","password","formValues","className","onSubmit","e","preventDefault","signInWithEmailAndPassword","then","user","catch","startLoginEmailPassword","placeholder","autoComplete","onChange","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","formValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","loadNotes","collection","get","noteStore","forEach","hijo","push","data","activeNote","startLoadingNote","setNote","refreshNote","JournalEntry","date","title","body","url","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","note","key","Sidebar","signOut","getSate","newNote","Date","getTime","add","NotesAppBar","display","file","files","getState","startUploading","document","querySelector","click","noteToFirestore","doc","update","Swal","fire","NoteScreen","activeId","useRef","useEffect","current","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoogedIn","setsIsLoogedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af476a42.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth Logout]',\r\n\r\n    uiSetError: '[UI] set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New notes',\r\n    notesActive: '[Notes] Set note active',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Update notes',\r\n    notesDelete: '[Notes] New notes',\r\n    notesFileUrl: '[Notes] image url',\r\n    notesLogoutClean: '[Notes] Logout ',\r\n\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n const initialState = {\r\n    uid:'',\r\n    name: '',\r\n \r\n} \r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return { }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    loadding: false,\r\n    msjError: null\r\n}\r\n\r\nexport const registro = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msjError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msjError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case types.logout:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// const initialState = {\r\n//     notes: [],\r\n//     active: {\r\n//         id: '',\r\n//         title: '',\r\n//         body: '',\r\n//         imgUrl: '',\r\n//         date: ''\r\n//     },\r\n// }\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            console.log(action.payload.id)\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    notes => notes.id === action.payload.id\r\n                        ? action.payload.notes\r\n                        : notes\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { registro } from '../reducers/uiReducer';\r\nimport {notesReducer} from '../reducers/notesReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: registro,\r\n    notes: notesReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n        )\r\n);","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCjEJEW1Ml0UmhpW0HZP5TSs96AsgGkreo\",\r\n    authDomain: \"app-frontend-6.firebaseapp.com\",\r\n    projectId: \"app-frontend-6\",\r\n    storageBucket: \"app-frontend-6.appspot.com\",\r\n    messagingSenderId: \"66843513700\",\r\n    appId: \"1:66843513700:web:ac800485c5370d3e30a071\"\r\n  };\r\n  \r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","import {types} from '../types/types'\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n","import { types } from '../types/types';\r\nimport { googleAuthProvider, firebase } from '../firebase/firebase-config'\r\nimport { startLoading, finishLoading } from './uiError.js '\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading)\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n               \r\n                dispatch(login(user.uid, user.displayName,))\r\n                dispatch(finishLoading)\r\n            })\r\n            .catch(e => {\r\n                \r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newStateForm = initialState ) => {\r\n        setValues( newStateForm );\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.ui);\r\n    console.log(loading)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'garcia123@gmail.com',\r\n        password: '1234567'\r\n    })\r\n\r\n    //desestructuramos\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    //disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setError, removeError } from '../../actions/uiError.js '\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msjError } = useSelector(state => state.ui);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = values\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('nombre requerido'))\r\n            console.log('nombre requerido')\r\n            return false\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email requerido'))\r\n            console.log('Email requerido')\r\n            return false\r\n        } else if (password !== password2) {\r\n            console.log('La contraseña es incorrecta')\r\n            dispatch(setError('La contraseña es incorrecta'))\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true\r\n\r\n\r\n    }\r\n\r\n    const HandleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={HandleRegister}>\r\n\r\n                {\r\n                    msjError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msjError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { db } from '../firebase/firebase-config'\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const noteStore = await db.collection(`${uid}/jurnal/note`).get()\r\n    const notes = [];\r\n\r\n    noteStore.forEach(hijo=>{\r\n       notes.push({\r\n        id:hijo.id,\r\n        ...hijo.data()\r\n       })\r\n    })\r\n   \r\n    console.log(notes)\r\n    return notes\r\n}\r\n\r\n","import { db } from '../firebase/firebase-config'\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const notesAction = (notes) => {\r\n    return async (dispatch, getSate) => {\r\n\r\n        const uid = getSate().auth.uid\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const docRef = await db.collection(`${uid}/jurnal/note`).add(newNote);\r\n        dispatch(activeNote(uid, newNote))\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, notes) => {\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...notes\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLoadingNote = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNote(notes))\r\n    }\r\n}\r\n\r\nexport const setNote = (notes) => {\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (notes) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!notes.url) {\r\n            delete notes.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...notes }\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${uid}/jurnal/note/${notes.id}`).update(noteToFirestore)\r\n\r\n        dispatch(refreshNote(notes.id,noteToFirestore));\r\n        Swal.fire('Saved', notes.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, notes) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        notes: {\r\n            id,\r\n            ...notes\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        console.log(activeNote);\r\n        console.log(file);\r\n\r\n    }\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notesAction';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClic = () => {\r\n        dispatch(\r\n            activeNote(id,\r\n                {\r\n                    date, title, body, url\r\n                }\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer\" onClick={handleEntryClic}>\r\n\r\n            <div\r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry key={note.id}\r\n                        {...note} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport {notesAction} from '../../actions/notesAction'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        console.log('Click')\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <img src=\"\" alt=\"\" />\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\"\r\n                    onClick={handleLogout}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\" onClick ={()=> dispatch(notesAction())}>\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { startSaveNote, startUploading } from '../../actions/notesAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        console.log(file)\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                     Picture\r\n                </button>\r\n\r\n                <button className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote } from '../../actions/notesAction'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active: notes } = useSelector(state => state.notes);\r\n    const dispatch = useDispatch();\r\n\r\n    const [values, handleInputChange, reset] = useForm(notes);\r\n    const { body, title, id } = values;\r\n\r\n    const activeId = useRef(notes.id)\r\n\r\n    useEffect(() => {\r\n        if (notes.id !== activeId.current) {\r\n            reset(notes)\r\n        }\r\n        activeId.current = notes.id\r\n    }, [notes, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(values.id,{...values}))\r\n    }, [values,dispatch])\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (notes.url)\r\n                    &&\r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ?  <NoteScreen />\r\n                    :<NothingSelected/>\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\n\r\nimport { login } from '../actions/auth'\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\nimport { startLoadingNote } from '../actions/notesAction';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoogedIn, setsIsLoogedIn] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            console.log(user)\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setsIsLoogedIn(true)\r\n                dispatch(startLoadingNote(user.uid))\r\n            } else {\r\n                setsIsLoogedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Cargando ...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoogedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLoogedIn}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}